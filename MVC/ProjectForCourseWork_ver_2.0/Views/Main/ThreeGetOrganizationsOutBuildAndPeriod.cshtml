@using Common.DTO
@using Common
@using ProjectForCourseWork_ver_2._0.Extensions
@using Kendo.Mvc.UI
@using Common.Extensions

@model IEnumerable<OrganizationForReportsDto>

<div class="title2">
    <h2>Отчет по организациям выехавшим из выбранного здания за период</h2>
</div>
<div class="filters row">
    <div class="col-lg-4">
        <label class="col-sm-5">Дата выезда</label>
        <div class="col-sm-7">
            <label for="dtStart">с</label>
            @(Html.Kendo()
                  .DatePicker()
                  .BackDatePicker()
                  .Name("dtStart")
                  .HtmlAttributes(new { style = "width:calc(20% - 5px);" })
                  .Value(DateTime.Today.StartOfMonth()))
            <label for="dtEnd">по</label>
            @(Html.Kendo()
                  .DatePicker()
                  .BackDatePicker()
                  .Name("dtEnd")
                  .HtmlAttributes(new { style = "width:calc(20% - 5px);" })
                  .Value(DateTime.Today.EndOfMonth())
            )
            <label for="build">Здание:</label>
            @(Html.Kendo().ComboBox()
            .Name("build")
            .HtmlAttributes(new { style = "width:400px" })
            .DataTextField("Name")
            .DataValueField("Id")
            .Filter(FilterType.Contains)
            .DataSource(source =>
            {
                source.Read(read =>
                {
                    read.Action("CascadingGetBuildings", "Rooms");
                });
            })
            )
        </div>
        <div style="padding-bottom: 10px; padding-top: 10px" class="button-filters">
            @(Html.Kendo().Button()
                                  .Name("btFilter")
                                  .Content("Применить фильтры")
                                  .Events(e => e.Click("btFilter_onClick"))
            )
        </div>
    </div>
</div>
<div class="row2">
    @(Html.Kendo().Grid(Model)
        .BackGrid()
        .Name("grOne")
        .HtmlAttributes(new { style = "height:760px" })
        .Groupable(g => g.Enabled(true))
        .Columns(columns =>
        {
            columns.Bound(p => p.Name);
            columns.Bound(p => p.Post);
            columns.Bound(p => p.InputDate).Format(Constants.AttributeDateFormat);
            columns.Bound(p => p.OutputDate).Format(Constants.AttributeDateFormat);
            columns.Bound(p => p.BuildingName);
            columns.Bound(p => p.RoomNumber);
        })
        .Pageable()
        .Sortable()
        .Scrollable()
        .Filterable()
        .DataSource(dataSource => dataSource
        .Ajax()
        .Events(events => events.Error("error_handler"))
        .Model(model =>
        {
            model.Id(p => p.Id);
        })
        .PageSize(20)
        .Read(read => read.Action("GetOrganizationsOutBuildAndPeriod", "Reports").Data("filters"))
        )
    )
</div>
<script>
    function rebindDataSource() {
        $("#grOne").data("kendoGrid").dataSource.read();
    }
    function filters() {
        //console.log($("#dtStart").val() + " " + $("#dtEnd").val());
        return {
            DateStart: $("#dtStart").val(),
            DateEnd: $("#dtEnd").val(),
            BuildingId: $("#build").val()
        }
    }
    function btFilter_onClick() {
        rebindDataSource();
    }
</script>


